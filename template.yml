AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: MIT
Description: >
  Okta hackauth0n 2021

  Automated Active Directory Domain Controller environment creation for Sales Engineering candidate technical challenges.
  
  created by Chris Concannon
Parameters:
  EnrollmentToken:
    Type: String
    Description: Enter the ASA enrollment token for this gateway
  KeyName:
    Type: String
    Description: Enter the KeyPair Name to SSH into this instance
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable ASA access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 7234
          ToPort: 7234
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  AsaBastion:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups: 
        - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           mkdir -p /var/lib/sftd
           echo '${EnrollmentToken}' > /var/lib/sftd/enrollment.token
           curl -C - https://pkg.scaleft.com/scaleft_yum.repo | sudo tee /etc/yum.repos.d/scaleft.repo
           sudo rpm --import https://dist.scaleft.com/pki/scaleft_rpm_key.asc
           sudo yum install scaleft-server-tools -y
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  LambdaCloudformationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  CloudformationCrudPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:Describe*'
              - 'cloudformation:List*'
              - 'cloudformation:Create*'
              - 'cloudformation:Delete*'
              - 'ec2:Create*'
              - 'ec2:Describe*'
              - 'ec2:Authorize*'
              - 'ec2:RunInstances'
            Resource: '*'
      PolicyName: CandidateCloudformationCrudPolicy
      Roles:
        - !Ref CloudformationRole
  CloudformationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - '*'
            Action:
              - 'sts:AssumeRole'
  CreateCandidateEnvFunction:
    Type: AWS::Lambda::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Runtime: go1.x
      Handler: main
      Role: !GetAtt LambdaCloudformationRole.Arn
      Code:
        S3Bucket: cconcannon-public-zip
        S3Key: createStack.zip
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          STACK_TEMPLATE_URL: https://concoktacloudformations.s3.us-west-1.amazonaws.com/workforce.biz-restricted-domain-controller.yml
          ALLOWED_IP_CIDR_RANGE: 0.0.0.0/0
          # ALLOWED_IP_CIDR_RANGE: !GetAtt AsaBastion.PublicIp
          ROLE_ARN: !GetAtt CloudformationRole.Arn
      Timeout: 180
Outputs:
  PublicIP:
    Description: Public IP address of the ASA Bastion
    Value: !GetAtt AsaBastion.PublicIp